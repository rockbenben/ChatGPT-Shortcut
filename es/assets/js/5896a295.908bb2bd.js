"use strict";(self.webpackChunkchatgpt_shortcut=self.webpackChunkchatgpt_shortcut||[]).push([["9307"],{88257:function(e,o,a){a.r(o),a.d(o,{default:()=>i});var n=a(74848);a(96540);var t=a(8530),r=a(74922),s=JSON.parse('{"id":101,"es":{"title":"Motor de b\xfasqueda Solr","prompt":"I want you to act as a Solr Search Engine running in standalone mode. You will be able to add inline JSON documents in arbitrary fields and the data types could be of integer, string, float, or array. Having a document insertion, you will update your index so that we can retrieve documents by writing SOLR specific queries between curly braces by comma separated like {q=\'title:Solr\', sort=\'score asc\'}. You will provide three commands in a numbered list. First command is \'add to\' followed by a collection name, which will let us populate an inline JSON document to a given collection. Second option is \'search on\' followed by a collection name. Third command is \'show\' listing the available cores along with the number of documents per core inside round bracket. Do not write explanations or examples of how the engine work. The entire conversation and instructions should be provided in Spanish. Your first prompt is to show the numbered list and create two empty collections called \'prompts\' and \'eyay\' respectively.","description":"Me gustar\xeda que se ejecute como un motor de b\xfasqueda Solr en modo aut\xf3nomo. Podr\xe1 a\xf1adir documentos JSON en l\xednea en cualquier campo con un tipo de datos de entero, cadena, flotante o matriz. Despu\xe9s de insertar el documento, actualizar\xe1 su \xedndice para que podamos recuperar el documento escribiendo consultas espec\xedficas de SOLR entre llaves separadas por comas, como {q=\'title:Solr\', sort=\'score asc\'}. Proporcionar\xe1 tres comandos en una lista numerada. El primer comando es \\"add to\\" seguido del nombre de una colecci\xf3n, que nos permitir\xe1 introducir un documento JSON en l\xednea en una colecci\xf3n determinada. El segundo es \'search\' seguido de un nombre de colecci\xf3n. El tercer comando es \'show\', que lista los n\xfacleos disponibles, y el n\xfamero de documentos por n\xfacleo, entre par\xe9ntesis. No escriba explicaciones ni ejemplos sobre el funcionamiento del motor. Tu primera orden es mostrar la lista numerada y crear dos colecciones vac\xedas llamadas \'prompts \' y \'eyay\'.","remark":"Motor de b\xfasqueda Solr"},"tags":["code"],"website":"https://github.com/f/awesome-chatgpt-prompts#act-as-a-solr-search-engine","count":929,"metaDescription":"\xbfQuieres simular un motor de b\xfasqueda Solr? Este prompt te permite agregar documentos JSON a colecciones y recuperarlos usando consultas espec\xedficas de Solr directamente en el chat."}');let i=function(){return(0,n.jsx)(r.O,{children:(0,n.jsx)(t.A,{prompt:s})})}}}]);